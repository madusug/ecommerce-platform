name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./webapp  # Default for frontend steps
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
  
      - name: Install dependencies
        run: npm ci
  
      - name: Lint Frontend
        run: npm run lint
  
      - name: Test Frontend
        run: npm test -- --watchAll=false
  
      - name: Build Frontend
        run: npm run build
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          region: us-east-1
  
      - name: Build and Push to Docker Hub and ECR
        working-directory: .  # Root for Docker build
        run: |
          # Build the image
          docker build -t ecomm-local:latest .
          
          # Tag and push to Docker Hub
          docker tag ecomm-local:latest ${{ secrets.DOCKER_USERNAME }}/ecommerce-platform:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/ecommerce-platform:latest
          
          # Tag and push to ECR
          docker tag ecomm-local:latest 239783743771.dkr.ecr.us-east-1.amazonaws.com/ecommerce-platform:latest
          docker push 239783743771.dkr.ecr.us-east-1.amazonaws.com/ecommerce-platform:latest
  
      - name: Update ECS Task Definition
        working-directory: .  # Root for AWS files
        run: |
          aws ecs register-task-definition --cli-input-json file://.aws/ecomm-plat-task-definition.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
  
      - name: Deploy to ECS
        working-directory: .  # Root for AWS commands
        run: |
          aws ecs update-service --cluster ecomm-cluster --service ecomm-service --force-new-deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1