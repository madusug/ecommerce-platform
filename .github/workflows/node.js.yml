name: Build and Test

on:
  push:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./webapp

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Lint Frontend
        run: npm run lint

      - name: Test Frontend
        run: npm test -- --watchAll=false

      - name: Build Frontend
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create ECR Repository if Not Exists
        working-directory: .
        run: |
          aws ecr describe-repositories --repository-names ecommerce-platform --region us-east-1 || aws ecr create-repository --repository-name ecommerce-platform --region us-east-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

      - name: Build and Push to Docker Hub and ECR
        working-directory: .
        run: |
          docker build -t ecomm-local:latest . || { echo "Build failed"; exit 1; }
          docker tag ecomm-local:latest ${{ secrets.DOCKER_USERNAME }}/ecommerce-platform:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/ecommerce-platform:latest || { echo "Docker Hub push failed"; exit 1; }
          docker tag ecomm-local:latest 239783743771.dkr.ecr.us-east-1.amazonaws.com/ecommerce-platform:latest
          echo "Attempting ECR push..."
          docker push 239783743771.dkr.ecr.us-east-1.amazonaws.com/ecommerce-platform:latest 2>&1 || { echo "ECR push failed with error above"; exit 1; }
          echo "ECR push succeeded"

      - name: Update ECS Task Definition
        working-directory: .
        run: |
          ls -la $GITHUB_WORKSPACE/.aws/ecomm-plat-task-definition.json || { echo "File not found"; exit 1; }
          aws ecs register-task-definition --cli-input-json file://$GITHUB_WORKSPACE/.aws/ecomm-plat-task-definition.json || { echo "Register failed"; exit 1; }
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

      - name: Deploy to ECS
        working-directory: .
        run: |
          aws ecs update-service --cluster ecommerce-platform --service ecomm-service --force-new-deployment || { echo "Deploy failed"; exit 1; }
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1